package com.example.john.greendaodemo.gen;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.changtai.db.Config;
import com.changtai.db.DBEntity;
import com.changtai.db.Device;
import com.changtai.db.LoginUser;
import com.changtai.db.Price;
import com.changtai.db.PurchaseRecord;
import com.changtai.db.User;
import com.changtai.db.WaterBeUsedDate;

import com.example.john.greendaodemo.gen.ConfigDao;
import com.example.john.greendaodemo.gen.DBEntityDao;
import com.example.john.greendaodemo.gen.DeviceDao;
import com.example.john.greendaodemo.gen.LoginUserDao;
import com.example.john.greendaodemo.gen.PriceDao;
import com.example.john.greendaodemo.gen.PurchaseRecordDao;
import com.example.john.greendaodemo.gen.UserDao;
import com.example.john.greendaodemo.gen.WaterBeUsedDateDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig configDaoConfig;
    private final DaoConfig dBEntityDaoConfig;
    private final DaoConfig deviceDaoConfig;
    private final DaoConfig loginUserDaoConfig;
    private final DaoConfig priceDaoConfig;
    private final DaoConfig purchaseRecordDaoConfig;
    private final DaoConfig userDaoConfig;
    private final DaoConfig waterBeUsedDateDaoConfig;

    private final ConfigDao configDao;
    private final DBEntityDao dBEntityDao;
    private final DeviceDao deviceDao;
    private final LoginUserDao loginUserDao;
    private final PriceDao priceDao;
    private final PurchaseRecordDao purchaseRecordDao;
    private final UserDao userDao;
    private final WaterBeUsedDateDao waterBeUsedDateDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        configDaoConfig = daoConfigMap.get(ConfigDao.class).clone();
        configDaoConfig.initIdentityScope(type);

        dBEntityDaoConfig = daoConfigMap.get(DBEntityDao.class).clone();
        dBEntityDaoConfig.initIdentityScope(type);

        deviceDaoConfig = daoConfigMap.get(DeviceDao.class).clone();
        deviceDaoConfig.initIdentityScope(type);

        loginUserDaoConfig = daoConfigMap.get(LoginUserDao.class).clone();
        loginUserDaoConfig.initIdentityScope(type);

        priceDaoConfig = daoConfigMap.get(PriceDao.class).clone();
        priceDaoConfig.initIdentityScope(type);

        purchaseRecordDaoConfig = daoConfigMap.get(PurchaseRecordDao.class).clone();
        purchaseRecordDaoConfig.initIdentityScope(type);

        userDaoConfig = daoConfigMap.get(UserDao.class).clone();
        userDaoConfig.initIdentityScope(type);

        waterBeUsedDateDaoConfig = daoConfigMap.get(WaterBeUsedDateDao.class).clone();
        waterBeUsedDateDaoConfig.initIdentityScope(type);

        configDao = new ConfigDao(configDaoConfig, this);
        dBEntityDao = new DBEntityDao(dBEntityDaoConfig, this);
        deviceDao = new DeviceDao(deviceDaoConfig, this);
        loginUserDao = new LoginUserDao(loginUserDaoConfig, this);
        priceDao = new PriceDao(priceDaoConfig, this);
        purchaseRecordDao = new PurchaseRecordDao(purchaseRecordDaoConfig, this);
        userDao = new UserDao(userDaoConfig, this);
        waterBeUsedDateDao = new WaterBeUsedDateDao(waterBeUsedDateDaoConfig, this);

        registerDao(Config.class, configDao);
        registerDao(DBEntity.class, dBEntityDao);
        registerDao(Device.class, deviceDao);
        registerDao(LoginUser.class, loginUserDao);
        registerDao(Price.class, priceDao);
        registerDao(PurchaseRecord.class, purchaseRecordDao);
        registerDao(User.class, userDao);
        registerDao(WaterBeUsedDate.class, waterBeUsedDateDao);
    }
    
    public void clear() {
        configDaoConfig.getIdentityScope().clear();
        dBEntityDaoConfig.getIdentityScope().clear();
        deviceDaoConfig.getIdentityScope().clear();
        loginUserDaoConfig.getIdentityScope().clear();
        priceDaoConfig.getIdentityScope().clear();
        purchaseRecordDaoConfig.getIdentityScope().clear();
        userDaoConfig.getIdentityScope().clear();
        waterBeUsedDateDaoConfig.getIdentityScope().clear();
    }

    public ConfigDao getConfigDao() {
        return configDao;
    }

    public DBEntityDao getDBEntityDao() {
        return dBEntityDao;
    }

    public DeviceDao getDeviceDao() {
        return deviceDao;
    }

    public LoginUserDao getLoginUserDao() {
        return loginUserDao;
    }

    public PriceDao getPriceDao() {
        return priceDao;
    }

    public PurchaseRecordDao getPurchaseRecordDao() {
        return purchaseRecordDao;
    }

    public UserDao getUserDao() {
        return userDao;
    }

    public WaterBeUsedDateDao getWaterBeUsedDateDao() {
        return waterBeUsedDateDao;
    }

}
